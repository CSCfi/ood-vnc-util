<% vnc_image = File.join("/appl/opt/ood", ENV["SLURM_OOD_ENV"], "vnc_images/vgl.sif") %>
---
cluster: "<%= ENV["CSC_CLUSTER"] -%>"

<% part = SlurmReservation.partition_to_use(csc_slurm_reservation, csc_slurm_partition) %>

<% max_mem_per_cpu = SlurmLimits.limits.fetch(part, {}).fetch(:max_mem_per_cpu, 0).to_f %>
<% mem = (max_mem_per_cpu * 1024 * csc_cores.to_i).to_i %>

<% n_gpus = part.include?("gpu") ? 1 : 0 %>
<% gpu_type = SlurmLimits.limits&.fetch(part, nil)&.fetch(:gpu_types)&.first %>
<% gres = [] %>
<% gres.push("nvme:#{csc_nvme}") if csc_nvme.to_i > 0 %>
<% gres.push("gpu:#{gpu_type}:#{n_gpus}") if gpu_type && n_gpus > 0 %>

batch_connect:
  template: vnc_container
  container_command: "apptainer"
  container_path: "<%= vnc_image %>"
  container_module: ""
  container_start_args:
    - --nv
    - --bind=$HOME
    - --bind=/tmp
    - --bind=/run
    - --bind=/appl
    - --env=PYTHONNOUSERSITE=1
  header: |
    source /appl/profile/zz-csc-env.sh
    [[ $(type -t module) == "function" ]] & export -f module
    export XDG_RUNTIME_DIR="$TMPDIR/xdg_runtime"
    mkdir -p -m 700 "$XDG_RUNTIME_DIR"
script:
  native:
    - '-c'
    - '<%= csc_cores %>'
    - '-t'
    - '<%= SlurmReservation.max_time(csc_slurm_reservation, csc_time) %>'
    <% if max_mem_per_cpu > 0 %>
    - '--mem=<%= mem -%>M'
    <% else %>
    - '--mem=<%= csc_memory -%>G'
    <% end %>
    <% unless gres.empty? %>
    - '--gres=<%= gres.join(",") -%>'
    <% end %>
    - '--partition=<%= part %>'
    - '--propagate=NONE'
