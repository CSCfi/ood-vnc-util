cd "${HOME}"

module purge && module restore
/appl/opt/ood/test/soft/ssh-keygen.sh
echo "Host r????? puhti* *.bullx localhost
HostbasedAuthentication no" >> /tmp/$USER/$SLURM_JOB_ID/.ssh/config 

export SHELL="$(getent passwd $USER | cut -d: -f7)"
export XDG_CONFIG_HOME="$HOME/Desktop/.config"
export XDG_DESKTOP_DIR=$HOME/Desktop
export XDG_DATA_HOME="$HOME/Desktop/.local/share"

mkdir -p $XDG_DATA_HOME

<% if context.reset_desktop_icons == "1" %>
   find "/appl/opt/ood/$SLURM_OOD_ENV/share/applications/" -mindepth 1 -exec cp {} ${XDG_DESKTOP_DIR}/ \;
<% end %>

echo "Launching desktop <%= context.desktop %> with app <%= context.app %>"

desktop_script="<%= session.staged_root.join("desktops", context.desktop.empty? ? "nodesktop.sh" : "#{context.desktop}.sh") -%>"
app_script="<%= session.staged_root.join("apps", "#{context.app}.sh") -%>"
app="<%= context.app %>"
export SING_FLAGS="$SING_FLAGS -B /tmp/$USER/$SLURM_JOB_ID/.ssh/config:$HOME/.ssh/config,/tmp/$USER/$SLURM_JOB_ID/.ssh/id_rsa_puhti_ood:$HOME/.ssh/id_rsa_puhti_ood"

# Bind common CSC environment directories
SING_FLAGS="$SING_FLAGS -B /projappl:/projappl -B /scratch:/scratch"

# Bind TMPDIR if it is set and directory exists
if [ -d "$TMPDIR" ]; then
    SING_FLAGS="$SING_FLAGS -B $TMPDIR:$TMPDIR"
fi

# Bind LOCAL_SCRATCH if it is set and directory exists
if [ -d "$LOCAL_SCRATCH" ]; then
    SING_FLAGS="$SING_FLAGS -B $LOCAL_SCRATCH:$LOCAL_SCRATCH"
fi

# Bind /fmi if it is set and directory exists
if [ -d "/fmi" ]; then
    SING_FLAGS="$SING_FLAGS -B /fmi:/fmi"
fi

# Bind /appl/data
if [ -d "/appl/data" ]; then
    SING_FLAGS="$SING_FLAGS -B /appl/data:/appl/data"
fi
<% if context.desktop.empty? %>
  singularity exec $SING_FLAGS $SING_IMAGE "$desktop_script" &
  if [[ -z "$app" ]];then
    xterm
  else
    exec "$app_script"
  fi
<% else %>
  if [[ -n "$app" ]];then
    exec "$app_script" &
  fi
  singularity exec $SING_FLAGS $SING_IMAGE "$desktop_script"
<% end %>


sed -i "/puhti-ood-$SLURM_JOB_ID/d" ~/.ssh/authorized_keys
rm -rf /tmp/$USER/$SLURM_JOB_ID/.ssh/
